CONFIGURE_FILE(config.h.in config.h)

FIND_PACKAGE(BISON)
FIND_PACKAGE(FLEX)

INCLUDE(CheckIncludeFile)
INCLUDE(CheckIncludeFileCXX)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckTypeSize)

SET(headers
	sys/ioctl.h
	sys/mman.h
	sys/resource.h
	sys/select.h
	sys/socket.h
	sys/time.h 
	sys/uio.h
	sys/un.h
	sys/wait.h
	arpa/inet.h
	netinet/in.h
	alloca.h
	assert.h 
	ctype.h 
	errno.h
	fcntl.h 
	grp.h 
	io.h
	libintl.h
	netdb.h
	pwd.h
	regex.h
	signal.h
	stdarg.h
	stddef.h
	stdint.h
	stdio.h
	stdlib.h
	sysexits.h
	syslog.h
	time.h
	wchar.h
	wctype.h
)

FILE(WRITE config.h.in "/* autogenerated, do not change! */\n\n"
  "#define PACKAGE           \"@PACKAGE@\"\n"
  "#define VERSION           \"@VERSION@\"\n"
  "#define DEFAULT_CONF_FILE \"@DEFAULT_CONF_FILE@\"\n"
  "#define DEFAULT_STATHOST  \"@DEFAULT_STATHOST@\"\n"
  "#define DATAROOTDIR       \"@DATAROOTDIR@\"\n"
  "#define FILTER_ENABLE     @FILTER_ENABLE@\n"
  "#define TARGET_SYSTEM     \"@CMAKE_SYSTEM@\"\n")
FOREACH(header ${headers})
  STRING(REPLACE "/" "_" _header ${header})
  STRING(REPLACE "." "_" _header ${_header})
  STRING(TOUPPER HAVE_${_header} HEAD)
  FILE(APPEND config.h.in "/* ${header} */\n#cmakedefine ${HEAD} 1\n\n")
  CHECK_INCLUDE_FILE(${header} ${HEAD})
ENDFOREACH()

ADD_DEFINITIONS(-DHAVE_CONFIG_H)

BISON_TARGET(GRAMMAR grammar.y  ${CMAKE_CURRENT_BINARY_DIR}/grammar.c)
FLEX_TARGET(SCANNER scanner.l ${CMAKE_CURRENT_BINARY_DIR}/scanner.c)
ADD_FLEX_BISON_DEPENDENCY(SCANNER GRAMMAR)

ADD_EXECUTABLE(tinyproxy
	${BISON_GRAMMAR_OUTPUTS}
	${FLEX_SCANNER_OUTPUTS}
	acl.c
	anonymous.c
	proctitle.c
	buffer.c
	child.c
	conns.c
	daemon.c
	hashmap.c
	heap.c
	ftp.c
	htmlerror.c
	http_message.c
	log.c
	network.c
	reqs.c
	sock.c
	stats.c
	text.c
	tinyproxy.c
	utils.c
	writev.c
	vector.c
	filter.c
)
